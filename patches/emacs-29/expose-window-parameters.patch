From 8214a208db8e17c802dc0ebbbc902b656e1d437b Mon Sep 17 00:00:00 2001
From: Mingkai Dong <mk@dong.mk>
Date: Fri, 24 Dec 2021 01:19:03 +0800
Subject: [PATCH] Expose ns_fullsize_content and ns_title_hidden

---
 src/frame.c  |  6 ++++++
 src/frame.h  |  6 ++++++
 src/nsfns.m  | 14 ++++++++++++++
 src/nsterm.h |  6 ++++++
 src/nsterm.m | 39 +++++++++++++++++++++++++++++++++++++++
 5 files changed, 71 insertions(+)

diff --git a/src/frame.c b/src/frame.c
index 2b06bc821d..fe7b2dacb7 100644
--- a/src/frame.c
+++ b/src/frame.c
@@ -986,6 +986,8 @@ make_frame (bool mini_p)
 #ifdef NS_IMPL_COCOA
   f->ns_appearance = ns_appearance_system_default;
   f->ns_transparent_titlebar = false;
+  f->ns_fullsize_content = false;
+  f->ns_title_hidden = false;
 #endif
 #endif
   f->select_mini_window_flag = false;
@@ -3905,6 +3907,8 @@ DEFUN ("frame-scale-factor", Fframe_scale_factor, Sframe_scale_factor,
 #ifdef NS_IMPL_COCOA
   {"ns-appearance",		SYMBOL_INDEX (Qns_appearance)},
   {"ns-transparent-titlebar",	SYMBOL_INDEX (Qns_transparent_titlebar)},
+  {"ns-fullsize-content",	SYMBOL_INDEX (Qns_fullsize_content)},
+  {"ns-title-hidden",		SYMBOL_INDEX (Qns_title_hidden)},
 #endif
 };
 
@@ -6092,6 +6096,8 @@ syms_of_frame (void)
 #ifdef NS_IMPL_COCOA
   DEFSYM (Qns_appearance, "ns-appearance");
   DEFSYM (Qns_transparent_titlebar, "ns-transparent-titlebar");
+  DEFSYM (Qns_fullsize_content, "ns-fullsize-content");
+  DEFSYM (Qns_title_hidden, "ns-title-hidden");
 #endif
 
   DEFSYM (Qalpha, "alpha");
diff --git a/src/frame.h b/src/frame.h
index 4060ee65c4..9f9976a6fd 100644
--- a/src/frame.h
+++ b/src/frame.h
@@ -653,6 +653,10 @@ #define EMACS_FRAME_H
   /* NSAppearance theme used on this frame.  */
   enum ns_appearance_type ns_appearance;
   bool_bf ns_transparent_titlebar;
+  /* True if the frame has title hidden.  */
+  bool_bf ns_title_hidden;
+  /* True if the content fill the whole frame.  */
+  bool_bf ns_fullsize_content;
 #endif
 } GCALIGNED_STRUCT;
 
@@ -1094,6 +1098,8 @@ #define FRAME_TOOLTIP_P(f) ((f)->tooltip)
 #ifdef NS_IMPL_COCOA
 #define FRAME_NS_APPEARANCE(f) ((f)->ns_appearance)
 #define FRAME_NS_TRANSPARENT_TITLEBAR(f) ((f)->ns_transparent_titlebar)
+#define FRAME_NS_FULLSIZE_CONTENT(f) ((f)->ns_fullsize_content)
+#define FRAME_NS_TITLE_HIDDEN(f) ((f)->ns_title_hidden)
 #endif
 #else /* not HAVE_WINDOW_SYSTEM */
 #define FRAME_UNDECORATED(f) ((void) (f), 0)
diff --git a/src/nsfns.m b/src/nsfns.m
index 643da01989..28b6cde0e6 100644
--- a/src/nsfns.m
+++ b/src/nsfns.m
@@ -1007,6 +1007,8 @@ Turn the input menu (an NSMenu) into a lisp list for tracking on lisp side.
 #ifdef NS_IMPL_COCOA
   ns_set_appearance,
   ns_set_transparent_titlebar,
+  ns_set_fullsize_content,
+  ns_set_title_hidden,
 #endif
 };
 
@@ -1327,6 +1329,18 @@ Turn the input menu (an NSMenu) into a lisp list for tracking on lisp side.
   FRAME_NS_TRANSPARENT_TITLEBAR (f) = !NILP (tem) && !EQ (tem, Qunbound);
   store_frame_param (f, Qns_transparent_titlebar,
                      FRAME_NS_TRANSPARENT_TITLEBAR (f) ? Qt : Qnil);
+
+  tem = gui_display_get_arg (dpyinfo, parms, Qns_fullsize_content,
+                             NULL, NULL, RES_TYPE_BOOLEAN);
+  FRAME_NS_FULLSIZE_CONTENT (f) = !NILP (tem) && !EQ (tem, Qunbound);
+  store_frame_param (f, Qns_fullsize_content,
+                     FRAME_NS_FULLSIZE_CONTENT (f) ? Qt : Qnil);
+
+  tem = gui_display_get_arg (dpyinfo, parms, Qns_title_hidden,
+                             NULL, NULL, RES_TYPE_BOOLEAN);
+  FRAME_NS_TITLE_HIDDEN (f) = !NILP (tem) && !EQ (tem, Qunbound);
+  store_frame_param (f, Qns_title_hidden,
+                     FRAME_NS_TITLE_HIDDEN (f) ? Qt : Qnil);
 #endif
 
   parent_frame = gui_display_get_arg (dpyinfo, parms, Qparent_frame, NULL, NULL,
diff --git a/src/nsterm.h b/src/nsterm.h
index 75b31c68f1..2218ada7d3 100644
--- a/src/nsterm.h
+++ b/src/nsterm.h
@@ -1190,6 +1190,12 @@ #define NSAPP_DATA2_RUNFILEDIALOG 11
 extern void ns_set_transparent_titlebar (struct frame *f,
                                          Lisp_Object new_value,
                                          Lisp_Object old_value);
+extern void ns_set_fullsize_content (struct frame *f,
+                                     Lisp_Object new_value,
+                                     Lisp_Object old_value);
+extern void ns_set_title_hidden (struct frame *f,
+                                 Lisp_Object new_value,
+                                 Lisp_Object old_value);
 #endif
 extern int ns_select (int nfds, fd_set *readfds, fd_set *writefds,
 		      fd_set *exceptfds, struct timespec *timeout,
diff --git a/src/nsterm.m b/src/nsterm.m
index 8428c689fd..ef5d1e7da7 100644
--- a/src/nsterm.m
+++ b/src/nsterm.m
@@ -1928,6 +1928,38 @@ Hide the window (X11 semantics)
     }
 #endif /* MAC_OS_X_VERSION_MAX_ALLOWED >= 101000 */
 }
+
+void
+ns_set_fullsize_content (struct frame *f, Lisp_Object new_value,
+                         Lisp_Object old_value)
+{
+#if MAC_OS_X_VERSION_MAX_ALLOWED >= 101000
+  NSTRACE ("ns_set_fullsize_content");
+
+  if (!EQ (new_value, old_value))
+    {
+      FRAME_NS_FULLSIZE_CONTENT (f) = !NILP (new_value);
+    }
+#endif /* MAC_OS_X_VERSION_MAX_ALLOWED >= 101000 */
+}
+
+void
+ns_set_title_hidden (struct frame *f, Lisp_Object new_value,
+                     Lisp_Object old_value)
+{
+#if MAC_OS_X_VERSION_MAX_ALLOWED >= 101000
+  EmacsView *view = (EmacsView *)FRAME_NS_VIEW (f);
+  NSWindow *window = [view window];
+
+  NSTRACE ("ns_set_title_hidden");
+
+  if ([window respondsToSelector: @selector(titleVisibility)]
+      && !EQ (new_value, old_value))
+    {
+      FRAME_NS_TITLE_HIDDEN (f) = !NILP (new_value);
+    }
+#endif /* MAC_OS_X_VERSION_MAX_ALLOWED >= 101000 */
+}
 #endif /* NS_IMPL_COCOA */
 
 static void
@@ -8242,6 +8274,11 @@ - (instancetype) initWithEmacsFrame:(struct frame *)f
       | NSWindowStyleMaskMiniaturizable
       | NSWindowStyleMaskClosable;
 
+#if defined (NS_IMPL_COCOA) && MAC_OS_X_VERSION_MAX_ALLOWED >= 101000
+  if (FRAME_NS_FULLSIZE_CONTENT (f))
+    styleMask |= NSWindowStyleMaskFullSizeContentView;
+#endif
+
   self = [super initWithContentRect:
                   NSMakeRect (0, 0,
                               FRAME_TEXT_COLS_TO_PIXEL_WIDTH (f, f->text_cols),
@@ -8282,6 +8319,8 @@ - (instancetype) initWithEmacsFrame:(struct frame *)f
 #if defined (NS_IMPL_COCOA) && MAC_OS_X_VERSION_MAX_ALLOWED >= 101000
       if ([self respondsToSelector:@selector(titlebarAppearsTransparent)])
         [self setTitlebarAppearsTransparent:FRAME_NS_TRANSPARENT_TITLEBAR (f)];
+      if ([self respondsToSelector:@selector(titleVisibility)])
+        self.titleVisibility = FRAME_NS_TITLE_HIDDEN (f) ? NSWindowTitleHidden : NSWindowTitleVisible;
 #endif
 
       [self setParentChildRelationships];
-- 
2.34.1

